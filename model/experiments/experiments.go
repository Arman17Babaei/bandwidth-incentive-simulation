package experiments

import (
	"go-incentive-simulation/model/parts/types"
)

var ex1 = types.Constants{
	Runs:                             1,
	Bits:                             16,
	NetworkSize:                      10000,
	BinSize:                          16,
	RangeAddress:                     65536,
	Originators:                      1000,
	RefreshRate:                      8,
	Threshold:                        16,
	RandomSeed:                       123456789,
	MaxProximityOrder:                16,
	Price:                            1,
	Chunks:                           10000,
	RequestsPerSecond:                12500,
	ThresholdEnabled:                 true,
	ForgivenessEnabled:               true,
	ForgivenessDuringRouting:         true,
	PaymentEnabled:                   false,
	MaxPOCheckEnabled:                false,
	OnlyOriginatorPays:               false,
	PayOnlyForCurrentRequest:         false,
	PayIfOrigPays:                    false,
	ForwarderPayForceOriginatorToPay: false,
	WaitingEnabled:                   true,
	RetryWithAnotherPeer:             true,
	CacheIsEnabled:                   false,
	PreferredChunks:                  false,
	AdjustableThreshold:              false,
	EdgeLock:                         true,
	SameOriginator:                   false,
	PrecomputeRespNodes:              true,
	WriteRoutesToFile:                false,
	WriteStatesToFile:                false,
	IterationMeansUniqueChunk:        false,
	DebugPrints:                      true,
	DebugInterval:                    1000000,
	NumRoutingGoroutines:             25,
	Epoch:                            1,
}

var defaultExperiment = types.Constants{
	Runs:                             1,
	Bits:                             16,
	NetworkSize:                      10000,
	BinSize:                          16,
	RangeAddress:                     65536,
	Originators:                      1000,
	RefreshRate:                      8,
	Threshold:                        16,
	RandomSeed:                       123456789,
	MaxProximityOrder:                16,
	Price:                            1,
	Chunks:                           10000,
	RequestsPerSecond:                12500,
	ThresholdEnabled:                 true,
	ForgivenessEnabled:               true,
	ForgivenessDuringRouting:         true,
	PaymentEnabled:                   false,
	MaxPOCheckEnabled:                false,
	OnlyOriginatorPays:               false,
	PayOnlyForCurrentRequest:         false,
	PayIfOrigPays:                    false,
	ForwarderPayForceOriginatorToPay: false,
	WaitingEnabled:                   true,
	RetryWithAnotherPeer:             true,
	CacheIsEnabled:                   false,
	PreferredChunks:                  false,
	AdjustableThreshold:              false,
	EdgeLock:                         true,
	SameOriginator:                   false,
	PrecomputeRespNodes:              true,
	WriteRoutesToFile:                false,
	WriteStatesToFile:                false,
	IterationMeansUniqueChunk:        false,
	DebugPrints:                      true,
	DebugInterval:                    1000000,
	NumRoutingGoroutines:             25,
	Epoch:                            1,
}

var Experiments = types.Experiments{
	1: ex1,
	2: defaultExperiment,
}
